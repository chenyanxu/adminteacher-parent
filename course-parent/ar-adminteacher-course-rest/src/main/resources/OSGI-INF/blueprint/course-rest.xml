<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
       http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">
    <reference id="courseService" interface="com.kalix.ar.adminteacher.course.api.biz.ICourseBeanService"/>

    <bean id="courseRoute" class="com.kalix.framework.core.impl.camel.BaseRouteBuilder">
        <property name="beanName" value="com.kalix.ar.adminteacher.course.entities.CourseBean"/>
        <property name="rests">
            <list>
                <bean class="com.kalix.framework.core.api.camel.CustomRest">
                    <property name="path" value="/coursetypes/{courseTypeId}/courses"/>

                    <property name="getDescription" value="查询指定课程类型id下的全部课程"/>
                    <property name="getParams" value="courseTypeId:path:long::课程类型id"/>
                    <property name="getOutType" value="com.kalix.framework.core.api.persistence.JsonData"/>
                    <property name="getToUri" value="bean:courseService?method=getEntitiesByFK(${header.courseTypeId},${header.page},${header.limit},${header.sort})"/>

                    <property name="postDescription" value="保存指定课程类型id的课程"/>
                    <!--<property name="postParams" value="courseTypeId:path:long::课程类型id"/>-->
                    <property name="inType" value="com.kalix.ar.adminteacher.course.entities.CourseBean"/>
                    <property name="postOutType" value="com.kalix.framework.core.api.persistence.JsonStatus"/>
                    <property name="postToUri" value="bean:courseService?method=saveEntityByFK(${header.courseTypeId},${body})"/>
                </bean>
                <bean class="com.kalix.framework.core.api.camel.CustomRest">
                    <property name="path" value="/coursetypes/{courseTypeId}/courses/{id}"/>

                    <property name="putDescription" value="修改指定课程类型id下的课程"/>
                    <!--<property name="putParams" value="courseTypeId:path:long::课程类型id"/>-->
                    <property name="inType" value="com.kalix.ar.adminteacher.course.entities.CourseBean"/>
                    <property name="putOutType" value="com.kalix.framework.core.api.persistence.JsonStatus"/>
                    <property name="putToUri" value="bean:courseService?method=updateEntityByFK(${header.courseTypeId},${body})"/>

                    <property name="deleteDescription" value="删除指定课程类型id下的课程"/>
                    <!--<property name="deleteParams" value="courseTypeId:path:long::课程类型id"/>-->
                    <property name="deleteOutType" value="com.kalix.framework.core.api.persistence.JsonStatus"/>
                    <property name="deleteToUri" value="bean:courseService?method=deleteEntityByFK(${header.courseTypeId},${header.id})"/>
                </bean>
                <bean class="com.kalix.framework.core.api.camel.CustomRest">
                    <property name="path" value="/courses/tree"/>

                    <property name="getDescription" value="查询全部课程(树状结构)"/>
                    <property name="getOutType" value="com.kalix.ar.adminteacher.course.dto.model.CourseTypeDTO"/>
                    <property name="getToUri" value="bean:courseService?method=getAllCourseTree()"/>
                </bean>
            </list>
        </property>
    </bean>

    <camelContext id="courseCamel" xmlns="http://camel.apache.org/schema/blueprint">
        <routeBuilder ref="courseRoute"/>
    </camelContext>
</blueprint>